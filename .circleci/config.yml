version: 2.1

orbs:
  python: circleci/python@2.1.1

jobs:
  build-and-test:
    docker:
      - image: cimg/python:3.10.2
    steps:
      - checkout
      - run:
          name: virtual environment
          command: |
            python -m venv venv &&
            source venv/bin/activate &&
            pip install -r requirements.txt
          when: always
      - run:
          name: linting
          command: |
            source venv/bin/activate
            flake8
      - run:
          name: tests
          command: |
            source venv/bin/activate
            pytest
  containerize:
    machine: true
    steps:
      - checkout
      - run:
          name: Containerize
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker build -t image_oc_lettings_site .
            docker tag image_oc_lettings_site $DOCKER_USERNAME/$PROJECT_NAME:$CIRCLE_SHA1
            docker push $DOCKER_USERNAME/$PROJECT_NAME:$CIRCLE_SHA1

  deploy-production:
    machine: true
    steps:
      - checkout
      - run:
          name: Deploy to Heroku
          command: |
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku apps:create $HEROKU_APP_NAME --region eu --addons=heroku-postgresql
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku config:set DJANGO_SECRET_KEY=$DJANGO_SECRET_KEY -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku config:set SENTRY_DSN=$SENTRY_DSN -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku config:set DEBUG=0 -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a $HEROKU_APP_NAME web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a $HEROKU_APP_NAME web
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku run python manage.py migrate -a $HEROKU_APP_NAME
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku run python manage.py loaddata db_data/test.json -a $HEROKU_APP_NAME
workflows:
  main:
    jobs:
      - build-and-test
      - containerize:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
      - deploy-production:
          requires:
            - containerize
          filters:
            branches:
              only:
                - master